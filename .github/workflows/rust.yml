name: Mailtutan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # - name: Install Wasm32
    #   run: rustup target add wasm32-unknown-unknown
    #
    # - name: Install Clippy
    #   run: rustup component add clippy
    #
    # - name: Install trunk
    #   run: cargo install --locked trunk
    #
    # - name: Check Clipy
    #   run: cargo clippy
    #
    # - name: Build
    #   run: make all

    - name: Run tests
      run: cargo test --verbose

  publish:
      if: startsWith(github.ref, 'refs/tags/')
      name: Publish for ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          name: [
              linux,
              windows,
              macos
          ]

          include:
            - name: linux
              os: ubuntu-latest
              artifact_name: target/release/mailtutan
              asset_name: mailtutan-linux-amd64
            - name: windows
              os: windows-latest
              artifact_name: target/release/mailtutan.exe
              asset_name: mailtutan-windows-amd64
            - name: macos
              os: macos-latest
              artifact_name: target/release/mailtutan
              asset_name: mailtutan-macos-amd64

      steps:
        - name: Checkout repository
          uses: actions/checkout@v1

        - name: Install latest rust toolchain
          uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: stable

        - name: Build
          run: cargo build -p mailtutan --release --locked

        - name: Upload binaries to release
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: ${{ matrix.artifact_name }}
            asset_name: ${{ matrix.asset_name }}
            tag: ${{ github.ref }}
            overwrite: true
